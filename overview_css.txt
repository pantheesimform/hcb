CSS (cascading style sheets) is stylesheet language

** CSS selectors **
basic selectors - id, class, ele type
IDs are unique per document only to select one specific element. Multiple ids results in invalid code, and will cause strange behavior in many places.
multiple classes per element, to layer on styles as required.
tell browser which HTML elements should be selected for CSS property values inside the rule applied to them, element(s) selected by the selector are subject of the selector.
if selector is syntactically invalid, the whole rule will be ignored.
article :first-child 1st child of article whereas article:first-child select any <article> element that is the 1st child of another element.
    To avoid this confusion, we can add the universal selector like article *:first-child
** selector type
1. type/tag/element selector
2. class selector (case-sensitive) (@)
3. id selector (#)
4. universal selector (*)
class for specific tag --> span.highlight different from h1.highlight
2+ class in tag --> .class1.class2 -- will apply to only those elements who have both(any tag)
id for specific tag --> span#highlight
more selector for common styling code --> h1, .class1, .class2, #id1,...
to apply globally--> p * selects all the nested elements inside the <p> element, * to apply whole doc/page same style
** attr selectors
1. attribute presence and value selector -- selector_attr.jpeg
2. substr matching selector -- selector_substr.jpeg
** selector structure
1. simple selector --> #id1
2. compound selector --> tag1#id1 (type and universal selecor must come first)
3. complex selector --> tag1#id1>.class1
4. selector list --> , sep list of selectors
5. relative selector --> accepted within certain contexts, such as the :has() pseudo-class. (can't be used in selector list)

** nesting in css **
1. tag1{& tag2{}} is tag1 tag2{} (& nesting selector is not required, but adding it helps to explicitly show that CSS nesting is being used.)
1. tag1{~ tag2{}} is tag1 ~tag2{}

** combinators **
1. decendant comb -- .box p --> selects p tag with parent tag having class box
2. child comb -- tag1>tag2 --> direct child (h1 inside div)
3. next sibling comb -- tag1 + tag2 (p just next to/adjacent h1 not other p)
4. Subsequent-sibling combinator -- tag1 ~ tag2 (all p that are coming after h1)

** CSS box-Model
content, padding, border, margin -- what is outline ?

** CSS value and units **
absolute units - cm,mm,q,in,pc,pt,px
relative units :
em - relative to font size of current/parent ele, if given 'x em' means x times than parent ele
rem - relative to font size of root ele, 'x rem' means x times than root ele, by default it is 16px
vh and vw - viewports height and width
lh and rlh - 1st is relative to self line height while other is relative to root ele
Percentage 
number (opacity)
**color - name, hexadecimal(0-9, a-f, #xxxxxx), rgb(255,255,255/0.x) 0.x is alpha/opacity
HWB(hue, whiteness, blackness), HSL(hue, saturation, lightness)
**specifying generated content. the value is quoted to demonstrate that it is a string. "content property"
** math functions like calc(); min(), max(), clamp(); sin(), cos(), tan() -- rotating angle

** sizing in CSS
Percentage, min max, viewports

** styling background and border **
background-color
background-image -- background-repeat(repeat, no-repeat, repeat-x/y, space, round), background-size(cover, contain), background-position
background-attachment (scroll, fixed, local) (how bg is scrolled when content is being scrolled)
border: size style color, border-radius(rounded)

** Text formatting and fonts ** diff bet font and text - https://stackoverflow.com/questions/21075127/font-vs-text-in-css-property-names, https://codesweetly.com/text-vs-font/
*font style*
font stack(multiple font families)
font-style(normal, italic, oblique)
font-weight(light,normal,bold,extrabold,black,100-900,lighter/bolder - Sets current ele boldness to one step lighter/heavier than its parent ele boldness)
text-transform(none,upppercase,lowercase,capitalize,full-width ? this is not working)
text-decoration(none,underline,overline,line-through)(shorthand for text-decoration-line, text-decoration-style, and text-decoration-color)
text-shadows(horizontal offset,vertical offset,blur radius,color)(can have multiple text shadows)
font-variant(shorthand property allows you to set all the font variants for a font)
font-stretch(font-width -- not supported yet)(selects a normal, condensed, or expanded face from a font)
text-rendering?
*text layout style*
text-align(left,right,center,justify)
line-height, word-spacing, letter-spacing
text-indent(how much horizontal space should be left before the beginning of the first line of the text content)
text-overflow(clip,ellipsis)(we have to make that text to be overflowed, for that have to use overflow:hidden, text-wrap:no-wrap)
white-space(whitespace and associated line breaks inside the element are handled)
word-break(whether line breaks appear wherever the text would otherwise overflow its content box)
hyphens(how words should be hyphenated when text wraps across multiple lines)
line-break(Relax or strengthen line breaking for Asian languages)

** CSS Gradients and shadows**
background-image: linear-gradient(to direction/angle,color1,color2,...),repeating-linear-gradient(),
background-image: radial-gradient(shape size at position, color1, ...);
background-image: conic-gradient([from angle] [at position,] color [degree], color [degree], ...); repeating-conic-gradient();
text-shadow: as previously mentioned (https://www.w3schools.com/css/css3_shadows.asp)
box-shadow: https://www.w3schools.com/css/css3_shadows_box.asp

** styling lists **
list-style-type (number,letter,roman,...)
list-style-position (inside/outside)
list-style-image (url,...)
** styling anchors/links **
:link(blue)
:visited(purple)
:hover(hand icon)
:focus(on press of tab key, shows border)
:active(red, click event)
to style change properties like color, cursor, outline


Introduction to CSS
CSS Selectors
Backgrounds and Borders
CSS Margins and Padding
Sizing and the Box Model
Text Formatting and Fonts
Styling anchors and lists
CSS Combinators
CSS Attr Selectors
Gradients and Shadows

*+ Pseudo-class and Pseudo-element
*+ CSS Layout (display, max-width, max-hight, position, z-index, overflow, float, inline-block, horizontal & vertical-align)
*+ CSS Forms
*+ CSS Box Sizing
*+ CSS Media Queries
*+ CSS Flex-box
*+ CSS Grid
*+ Debugging Styling in the browser